// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rbl_tracker.Data;

#nullable disable

namespace rbl_tracker.Migrations.Sqlite
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20230506112007_AddUceprotectRbl")]
    partial class AddUceprotectRbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.Property<Guid>("DetectedHistoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RblsId")
                        .HasColumnType("TEXT");

                    b.HasKey("DetectedHistoryId", "RblsId");

                    b.HasIndex("RblsId");

                    b.ToTable("CheckRblHistoryRbl");
                });

            modelBuilder.Entity("rbl_tracker.Models.CheckRblHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("CheckTime")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("Domain")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Level")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CheckRblHistory");
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("rbl_tracker.Models.Rbl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DelistUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Rbls");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d5940f0-cfb9-4662-bf7f-3aa5c75b24fe"),
                            Address = "bl.spamcop.com",
                            CreateTime = 1683372007L,
                            DelistUrl = "https://www.spamcop.net/bl.shtml",
                            Level = 1,
                            Name = "SpamCop",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("65c8dc74-6167-465c-8679-17255247dfb2"),
                            Address = "0spam.fusionzero.com",
                            CreateTime = 1683372007L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("756d63cd-a844-4d09-a0ba-ca55797486af"),
                            Address = "url.0spam.org",
                            CreateTime = 1683372007L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 1,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("2984624e-2c1c-44bc-9937-0a5e149e91ca"),
                            Address = "ips.backscatterer.org",
                            CreateTime = 1683372007L,
                            DelistUrl = "http://www.backscatterer.org/?target=test",
                            Level = 2,
                            Name = "backscatterer",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("592ae338-4cfa-4b3c-8fc5-088d28733cdb"),
                            Address = "combined.abuse.ch",
                            CreateTime = 1683372007L,
                            DelistUrl = "https://abuse.ch/?p=532",
                            Level = 1,
                            Name = "Abuse.ch",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("70abdde0-7a95-4870-9383-4892f6ccf4a2"),
                            Address = "zen.spamhaus.org",
                            CreateTime = 1683372007L,
                            DelistUrl = "http://www.spamhaus.org/zen/",
                            Level = 2,
                            Name = "Spamhaus",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("54c675b4-497e-407d-b83d-7786b1e9a695"),
                            Address = "spam.spamrats.com",
                            CreateTime = 1683372007L,
                            DelistUrl = "https://www.spamrats.com/lookup.php?ip=ADDRESS",
                            Level = 0,
                            Name = "Spam Rats",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("700b81b1-9fbc-4ff2-b417-a9071be5eb42"),
                            Address = "b.barracudacentral.org",
                            CreateTime = 1683372007L,
                            DelistUrl = "http://barracudacentral.org/rbl",
                            Level = 1,
                            Name = "Barracuda",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("0f8a1a71-a532-463c-bc06-e38b01b427cf"),
                            Address = "ix.dnsbl.manitu.net",
                            CreateTime = 1683372007L,
                            DelistUrl = "https://www.nixspam.net/lookup.php?language=en&value=ADDRESS",
                            Level = 1,
                            Name = "Manitu",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("e4d31ba6-e0f3-4002-a0ee-12bafc8003a6"),
                            Address = "spam.dnsbl.sorbs.net",
                            CreateTime = 1683372007L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Spam Sorbs",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("c539edf0-23e8-458b-bd3c-14af8dc03ef7"),
                            Address = "smtp.dnsbl.sorbs.net",
                            CreateTime = 1683372007L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "SMTP Relay Sorbs",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("60081dbe-f965-4771-bfba-9b82a945f9cf"),
                            Address = "web.dnsbl.sorbs.net",
                            CreateTime = 1683372007L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Web Sorbs",
                            Type = 1,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("387b3dcf-1e5a-4522-8d5b-7088b4145189"),
                            Address = "spam.dnsbl.anonmails.de",
                            CreateTime = 1683372007L,
                            DelistUrl = "https://anonmails.de/dnsbl.php?ip=ADDRESS",
                            Level = 1,
                            Name = "Annonmails.de",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("95bff823-97c6-4088-a657-a796425c430a"),
                            Address = "ubl.lashback.com",
                            CreateTime = 1683372007L,
                            DelistUrl = "https://blacklist.lashback.com/?ipAddress=ADDRESS",
                            Level = 3,
                            Name = "Lashback",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("a8e73374-c710-4d21-8691-e58216bfa541"),
                            Address = "z.mailspike.net",
                            CreateTime = 1683372007L,
                            DelistUrl = "https://mailspike.org/iplookup.html",
                            Level = 1,
                            Name = "Mailspike",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("07bd68df-729d-424a-9dcd-d4600702e442"),
                            Address = "cbl.abuseat.org",
                            CreateTime = 1683372007L,
                            DelistUrl = "http://www.abuseat.org",
                            Level = 1,
                            Name = "Abuseeat",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("e6f7fb71-352c-45cb-b2a6-3d638cf16cc5"),
                            Address = "psbl.surriel.com",
                            CreateTime = 1683372007L,
                            DelistUrl = "https://psbl.org/listing?ip=ADDRESS",
                            Level = 1,
                            Name = "PSBL Surriel",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("a8a30524-569e-46b1-aee6-8a76dc372cd4"),
                            Address = "bl.rspamd.com",
                            CreateTime = 1683372007L,
                            DelistUrl = "https://bl.rspamd.com/",
                            Level = 1,
                            Name = "RBL Rspamd",
                            Type = 1,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("c22ea400-d1db-4a1c-a4a6-b99c7f27ef32"),
                            Address = "dnsbl-1.uceprotect.net",
                            CreateTime = 1683372007L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL1",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("019b452c-0f85-4aca-90d3-6eb30cbd20b5"),
                            Address = "dnsbl-2.uceprotect.net",
                            CreateTime = 1683372007L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL2",
                            Type = 0,
                            UpdateTime = 1683372007L
                        },
                        new
                        {
                            Id = new Guid("fddf43f1-4bc6-4c79-935e-fce82c8336c5"),
                            Address = "dnsbl-3.uceprotect.net",
                            CreateTime = 1683372007L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL3",
                            Type = 0,
                            UpdateTime = 1683372007L
                        });
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PaswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PaswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.HasOne("rbl_tracker.Models.CheckRblHistory", null)
                        .WithMany()
                        .HasForeignKey("DetectedHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rbl_tracker.Models.Rbl", null)
                        .WithMany()
                        .HasForeignKey("RblsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Domains")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Ips")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Navigation("Domains");

                    b.Navigation("Ips");
                });
#pragma warning restore 612, 618
        }
    }
}
