// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rbl_tracker.Data;

#nullable disable

namespace rbl_tracker.Migrations.Sqlite
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20230506110209_RblHistory")]
    partial class RblHistory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.Property<Guid>("DetectedHistoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RblsId")
                        .HasColumnType("TEXT");

                    b.HasKey("DetectedHistoryId", "RblsId");

                    b.HasIndex("RblsId");

                    b.ToTable("CheckRblHistoryRbl");
                });

            modelBuilder.Entity("rbl_tracker.Models.CheckRblHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("CheckTime")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("Domain")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Level")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CheckRblHistory");
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("rbl_tracker.Models.Rbl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DelistUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Rbls");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23df571e-b231-40be-9469-a662fec580bd"),
                            Address = "bl.spamcop.com",
                            CreateTime = 1683370928L,
                            DelistUrl = "https://www.spamcop.net/bl.shtml",
                            Level = 1,
                            Name = "SpamCop",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("a46242bd-3d3a-4898-b007-a631fcc7dfd8"),
                            Address = "0spam.fusionzero.com",
                            CreateTime = 1683370928L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("f226a88f-c3ad-4282-b0af-3775104ca379"),
                            Address = "url.0spam.org",
                            CreateTime = 1683370928L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 1,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("c4dffcb8-31dd-4d69-a429-083ae6734088"),
                            Address = "ips.backscatterer.org",
                            CreateTime = 1683370928L,
                            DelistUrl = "http://www.backscatterer.org/?target=test",
                            Level = 2,
                            Name = "backscatterer",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("bc2d1548-442c-4515-a9ff-fab29b4c69ad"),
                            Address = "combined.abuse.ch",
                            CreateTime = 1683370928L,
                            DelistUrl = "https://abuse.ch/?p=532",
                            Level = 1,
                            Name = "Abuse.ch",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("0697d05e-c3aa-4a45-99a1-8594298926d6"),
                            Address = "zen.spamhaus.org",
                            CreateTime = 1683370928L,
                            DelistUrl = "http://www.spamhaus.org/zen/",
                            Level = 2,
                            Name = "Spamhaus",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("401d080b-dcaa-4430-9574-f1fe933e3283"),
                            Address = "spam.spamrats.com",
                            CreateTime = 1683370928L,
                            DelistUrl = "https://www.spamrats.com/lookup.php?ip=ADDRESS",
                            Level = 0,
                            Name = "Spam Rats",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("93a16c28-7797-411c-92ae-ed3c5552616c"),
                            Address = "b.barracudacentral.org",
                            CreateTime = 1683370928L,
                            DelistUrl = "http://barracudacentral.org/rbl",
                            Level = 1,
                            Name = "Barracuda",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("90e367c6-d4bb-4042-893e-22b385cf7f3d"),
                            Address = "ix.dnsbl.manitu.net",
                            CreateTime = 1683370928L,
                            DelistUrl = "https://www.nixspam.net/lookup.php?language=en&value=ADDRESS",
                            Level = 1,
                            Name = "Manitu",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("4c3776bf-392f-49bd-8d29-863d23263c52"),
                            Address = "spam.dnsbl.sorbs.net",
                            CreateTime = 1683370928L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Spam Sorbs",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("6633d91e-a491-45e1-8132-1ee1b4747cc5"),
                            Address = "smtp.dnsbl.sorbs.net",
                            CreateTime = 1683370928L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "SMTP Relay Sorbs",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("4d01845e-3a78-4a55-8d3c-7c74e0fafc89"),
                            Address = "web.dnsbl.sorbs.net",
                            CreateTime = 1683370928L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Web Sorbs",
                            Type = 1,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("827b5f2c-f431-41c4-bb2c-b380b2490956"),
                            Address = "spam.dnsbl.anonmails.de",
                            CreateTime = 1683370928L,
                            DelistUrl = "https://anonmails.de/dnsbl.php?ip=ADDRESS",
                            Level = 1,
                            Name = "Annonmails.de",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("c14409d1-9347-4fa5-a879-7321f76ef9fd"),
                            Address = "ubl.lashback.com",
                            CreateTime = 1683370928L,
                            DelistUrl = "https://blacklist.lashback.com/?ipAddress=ADDRESS",
                            Level = 3,
                            Name = "Lashback",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("cce63a65-4665-41a0-8eff-f4b7c1eaf7e9"),
                            Address = "z.mailspike.net",
                            CreateTime = 1683370928L,
                            DelistUrl = "https://mailspike.org/iplookup.html",
                            Level = 1,
                            Name = "Mailspike",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("39f067c1-ea2b-45d9-bc5a-c59d7a7bd645"),
                            Address = "cbl.abuseat.org",
                            CreateTime = 1683370928L,
                            DelistUrl = "http://www.abuseat.org",
                            Level = 1,
                            Name = "Abuseeat",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("78d8deda-868d-4d76-9ebb-bdc2248278e9"),
                            Address = "psbl.surriel.com",
                            CreateTime = 1683370928L,
                            DelistUrl = "https://psbl.org/listing?ip=ADDRESS",
                            Level = 1,
                            Name = "PSBL Surriel",
                            Type = 0,
                            UpdateTime = 1683370928L
                        },
                        new
                        {
                            Id = new Guid("94ee4579-570f-4aee-b30a-f6f9f65282d5"),
                            Address = "bl.rspamd.com",
                            CreateTime = 1683370928L,
                            DelistUrl = "https://bl.rspamd.com/",
                            Level = 1,
                            Name = "RBL Rspamd",
                            Type = 1,
                            UpdateTime = 1683370928L
                        });
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PaswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PaswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.HasOne("rbl_tracker.Models.CheckRblHistory", null)
                        .WithMany()
                        .HasForeignKey("DetectedHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rbl_tracker.Models.Rbl", null)
                        .WithMany()
                        .HasForeignKey("RblsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Domains")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Ips")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Navigation("Domains");

                    b.Navigation("Ips");
                });
#pragma warning restore 612, 618
        }
    }
}
