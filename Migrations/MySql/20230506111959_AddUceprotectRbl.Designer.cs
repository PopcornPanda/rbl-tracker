// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rbl_tracker.Data;

#nullable disable

namespace rbl_tracker.Migrations.MySql
{
    [DbContext(typeof(MySqlDbContext))]
    [Migration("20230506111959_AddUceprotectRbl")]
    partial class AddUceprotectRbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.Property<Guid>("DetectedHistoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RblsId")
                        .HasColumnType("char(36)");

                    b.HasKey("DetectedHistoryId", "RblsId");

                    b.HasIndex("RblsId");

                    b.ToTable("CheckRblHistoryRbl");
                });

            modelBuilder.Entity("rbl_tracker.Models.CheckRblHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("CheckTime")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Domain")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Ip")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CheckRblHistory");
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("rbl_tracker.Models.Rbl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("DelistUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Rbls");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22472271-8b1d-42e0-a3ef-9e8a8e132ca7"),
                            Address = "bl.spamcop.com",
                            CreateTime = 1683371998L,
                            DelistUrl = "https://www.spamcop.net/bl.shtml",
                            Level = 1,
                            Name = "SpamCop",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("6b30392e-b43e-4a64-975e-8c165345ca7c"),
                            Address = "0spam.fusionzero.com",
                            CreateTime = 1683371998L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("9a301e0c-4b41-4292-9f08-877f5862ac63"),
                            Address = "url.0spam.org",
                            CreateTime = 1683371998L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 1,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("213e0252-9e8d-48e4-99d0-6ad281f9830a"),
                            Address = "ips.backscatterer.org",
                            CreateTime = 1683371998L,
                            DelistUrl = "http://www.backscatterer.org/?target=test",
                            Level = 2,
                            Name = "backscatterer",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("d91ea6ff-0284-48d2-93c7-80aa7c669be3"),
                            Address = "combined.abuse.ch",
                            CreateTime = 1683371998L,
                            DelistUrl = "https://abuse.ch/?p=532",
                            Level = 1,
                            Name = "Abuse.ch",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("e9efb6ff-4e3a-4067-8aac-70f394619a8c"),
                            Address = "zen.spamhaus.org",
                            CreateTime = 1683371998L,
                            DelistUrl = "http://www.spamhaus.org/zen/",
                            Level = 2,
                            Name = "Spamhaus",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("512f6c7d-40f0-4044-8df3-140b26f03b59"),
                            Address = "spam.spamrats.com",
                            CreateTime = 1683371998L,
                            DelistUrl = "https://www.spamrats.com/lookup.php?ip=ADDRESS",
                            Level = 0,
                            Name = "Spam Rats",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("c6890068-b23e-4d51-9858-ce48a80ceb86"),
                            Address = "b.barracudacentral.org",
                            CreateTime = 1683371998L,
                            DelistUrl = "http://barracudacentral.org/rbl",
                            Level = 1,
                            Name = "Barracuda",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("6e75d505-a54b-4da1-b867-893b95f1fa8e"),
                            Address = "ix.dnsbl.manitu.net",
                            CreateTime = 1683371998L,
                            DelistUrl = "https://www.nixspam.net/lookup.php?language=en&value=ADDRESS",
                            Level = 1,
                            Name = "Manitu",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("e580051a-f21d-4460-ae52-df0c372eb696"),
                            Address = "spam.dnsbl.sorbs.net",
                            CreateTime = 1683371998L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Spam Sorbs",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("24c9e2d1-75ce-41a3-a4af-2a414fdf02c6"),
                            Address = "smtp.dnsbl.sorbs.net",
                            CreateTime = 1683371998L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "SMTP Relay Sorbs",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("d7947e8b-0667-407b-8408-1b9eb690f569"),
                            Address = "web.dnsbl.sorbs.net",
                            CreateTime = 1683371998L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Web Sorbs",
                            Type = 1,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("effead25-60d8-4ec7-9b0a-e2c7b4d86b6f"),
                            Address = "spam.dnsbl.anonmails.de",
                            CreateTime = 1683371998L,
                            DelistUrl = "https://anonmails.de/dnsbl.php?ip=ADDRESS",
                            Level = 1,
                            Name = "Annonmails.de",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("95aa5e31-15e3-401e-8a92-65fe37bc9a35"),
                            Address = "ubl.lashback.com",
                            CreateTime = 1683371998L,
                            DelistUrl = "https://blacklist.lashback.com/?ipAddress=ADDRESS",
                            Level = 3,
                            Name = "Lashback",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("fb512ee7-3982-4c8f-9a35-63a30b891c43"),
                            Address = "z.mailspike.net",
                            CreateTime = 1683371998L,
                            DelistUrl = "https://mailspike.org/iplookup.html",
                            Level = 1,
                            Name = "Mailspike",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("4f9519d2-1012-410d-a296-1d2b302d8fb5"),
                            Address = "cbl.abuseat.org",
                            CreateTime = 1683371998L,
                            DelistUrl = "http://www.abuseat.org",
                            Level = 1,
                            Name = "Abuseeat",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("bbd4158d-7f90-4853-9a1e-407f46655d4a"),
                            Address = "psbl.surriel.com",
                            CreateTime = 1683371998L,
                            DelistUrl = "https://psbl.org/listing?ip=ADDRESS",
                            Level = 1,
                            Name = "PSBL Surriel",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("ce718fa6-a357-4b43-89d2-09a9b1cbc420"),
                            Address = "bl.rspamd.com",
                            CreateTime = 1683371998L,
                            DelistUrl = "https://bl.rspamd.com/",
                            Level = 1,
                            Name = "RBL Rspamd",
                            Type = 1,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("769e37a1-a6f2-4dba-8653-8f17be0f4607"),
                            Address = "dnsbl-1.uceprotect.net",
                            CreateTime = 1683371998L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL1",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("3ae2da7d-8aaf-4e4d-a0e8-63a4534eab84"),
                            Address = "dnsbl-2.uceprotect.net",
                            CreateTime = 1683371998L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL2",
                            Type = 0,
                            UpdateTime = 1683371998L
                        },
                        new
                        {
                            Id = new Guid("28ab9302-0ece-4a48-97f4-644b407c3212"),
                            Address = "dnsbl-3.uceprotect.net",
                            CreateTime = 1683371998L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL3",
                            Type = 0,
                            UpdateTime = 1683371998L
                        });
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PaswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PaswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.HasOne("rbl_tracker.Models.CheckRblHistory", null)
                        .WithMany()
                        .HasForeignKey("DetectedHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rbl_tracker.Models.Rbl", null)
                        .WithMany()
                        .HasForeignKey("RblsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Domains")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Ips")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Navigation("Domains");

                    b.Navigation("Ips");
                });
#pragma warning restore 612, 618
        }
    }
}
