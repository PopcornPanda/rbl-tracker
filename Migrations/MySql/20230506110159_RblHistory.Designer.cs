// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rbl_tracker.Data;

#nullable disable

namespace rbl_tracker.Migrations.MySql
{
    [DbContext(typeof(MySqlDbContext))]
    [Migration("20230506110159_RblHistory")]
    partial class RblHistory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.Property<Guid>("DetectedHistoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RblsId")
                        .HasColumnType("char(36)");

                    b.HasKey("DetectedHistoryId", "RblsId");

                    b.HasIndex("RblsId");

                    b.ToTable("CheckRblHistoryRbl");
                });

            modelBuilder.Entity("rbl_tracker.Models.CheckRblHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("CheckTime")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Domain")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Ip")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CheckRblHistory");
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("rbl_tracker.Models.Rbl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("DelistUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Rbls");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2f11101-d683-421f-b1ef-01cab9a709af"),
                            Address = "bl.spamcop.com",
                            CreateTime = 1683370919L,
                            DelistUrl = "https://www.spamcop.net/bl.shtml",
                            Level = 1,
                            Name = "SpamCop",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("879d89d5-5597-49c9-96eb-ff5140580260"),
                            Address = "0spam.fusionzero.com",
                            CreateTime = 1683370919L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("24bcd4bb-c8f4-4b37-9b63-dca04d93ea5b"),
                            Address = "url.0spam.org",
                            CreateTime = 1683370919L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 1,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("17d5e2d0-145a-4cfe-a61d-fc7485e2b2f1"),
                            Address = "ips.backscatterer.org",
                            CreateTime = 1683370919L,
                            DelistUrl = "http://www.backscatterer.org/?target=test",
                            Level = 2,
                            Name = "backscatterer",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("1a0f4e35-4f0f-4bd8-8877-6574f790178c"),
                            Address = "combined.abuse.ch",
                            CreateTime = 1683370919L,
                            DelistUrl = "https://abuse.ch/?p=532",
                            Level = 1,
                            Name = "Abuse.ch",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("72c5a937-ecb1-47ca-874e-4866a72a57c3"),
                            Address = "zen.spamhaus.org",
                            CreateTime = 1683370919L,
                            DelistUrl = "http://www.spamhaus.org/zen/",
                            Level = 2,
                            Name = "Spamhaus",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("bc8b957a-eb1c-43bb-81dd-dad9bdd20a54"),
                            Address = "spam.spamrats.com",
                            CreateTime = 1683370919L,
                            DelistUrl = "https://www.spamrats.com/lookup.php?ip=ADDRESS",
                            Level = 0,
                            Name = "Spam Rats",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("2cd817be-96f4-4c4e-a84f-7917bac860fa"),
                            Address = "b.barracudacentral.org",
                            CreateTime = 1683370919L,
                            DelistUrl = "http://barracudacentral.org/rbl",
                            Level = 1,
                            Name = "Barracuda",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("4983eb25-c6d1-4bb9-b6cb-943d67760f3b"),
                            Address = "ix.dnsbl.manitu.net",
                            CreateTime = 1683370919L,
                            DelistUrl = "https://www.nixspam.net/lookup.php?language=en&value=ADDRESS",
                            Level = 1,
                            Name = "Manitu",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("731a7ff3-b219-401d-ba1a-778d1391680c"),
                            Address = "spam.dnsbl.sorbs.net",
                            CreateTime = 1683370919L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Spam Sorbs",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("d3e2d986-d8d5-4ed8-a38c-9113142f05ed"),
                            Address = "smtp.dnsbl.sorbs.net",
                            CreateTime = 1683370919L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "SMTP Relay Sorbs",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("7b909ad2-a210-4c00-8e21-b08a3a14b313"),
                            Address = "web.dnsbl.sorbs.net",
                            CreateTime = 1683370919L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Web Sorbs",
                            Type = 1,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("d543bb1b-c40b-4876-bb2b-2d9fefd562e9"),
                            Address = "spam.dnsbl.anonmails.de",
                            CreateTime = 1683370919L,
                            DelistUrl = "https://anonmails.de/dnsbl.php?ip=ADDRESS",
                            Level = 1,
                            Name = "Annonmails.de",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("1d5bad32-989a-4118-82c1-23e147b120d1"),
                            Address = "ubl.lashback.com",
                            CreateTime = 1683370919L,
                            DelistUrl = "https://blacklist.lashback.com/?ipAddress=ADDRESS",
                            Level = 3,
                            Name = "Lashback",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("fd7c907c-4511-46d3-b2e4-193bace483ae"),
                            Address = "z.mailspike.net",
                            CreateTime = 1683370919L,
                            DelistUrl = "https://mailspike.org/iplookup.html",
                            Level = 1,
                            Name = "Mailspike",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("508dbc91-c323-4d0e-baab-338b1091baaa"),
                            Address = "cbl.abuseat.org",
                            CreateTime = 1683370919L,
                            DelistUrl = "http://www.abuseat.org",
                            Level = 1,
                            Name = "Abuseeat",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("0b311b29-1410-4be3-a858-432e0987be5d"),
                            Address = "psbl.surriel.com",
                            CreateTime = 1683370919L,
                            DelistUrl = "https://psbl.org/listing?ip=ADDRESS",
                            Level = 1,
                            Name = "PSBL Surriel",
                            Type = 0,
                            UpdateTime = 1683370919L
                        },
                        new
                        {
                            Id = new Guid("7a101bba-52c3-4be5-95af-b507fd21db3e"),
                            Address = "bl.rspamd.com",
                            CreateTime = 1683370919L,
                            DelistUrl = "https://bl.rspamd.com/",
                            Level = 1,
                            Name = "RBL Rspamd",
                            Type = 1,
                            UpdateTime = 1683370919L
                        });
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PaswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PaswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.HasOne("rbl_tracker.Models.CheckRblHistory", null)
                        .WithMany()
                        .HasForeignKey("DetectedHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rbl_tracker.Models.Rbl", null)
                        .WithMany()
                        .HasForeignKey("RblsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Domains")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Ips")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Navigation("Domains");

                    b.Navigation("Ips");
                });
#pragma warning restore 612, 618
        }
    }
}
