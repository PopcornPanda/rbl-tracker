// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rbl_tracker.Data;

#nullable disable

namespace rbl_tracker.Migrations.MySql
{
    [DbContext(typeof(MySqlDbContext))]
    partial class MySqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.Property<Guid>("DetectedHistoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RblsId")
                        .HasColumnType("char(36)");

                    b.HasKey("DetectedHistoryId", "RblsId");

                    b.HasIndex("RblsId");

                    b.ToTable("CheckRblHistoryRbl");
                });

            modelBuilder.Entity("rbl_tracker.Models.CheckRblHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("CheckTime")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Domain")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Ip")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CheckRblHistory");
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("rbl_tracker.Models.Rbl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("DelistUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Rbls");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23a4fb19-4f6a-4aff-8fe3-baf828a204b3"),
                            Address = "bl.spamcop.com",
                            CreateTime = 1683372057L,
                            DelistUrl = "https://www.spamcop.net/bl.shtml",
                            Level = 1,
                            Name = "SpamCop",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("3df9a659-52b0-4414-8d03-2774d59e0d80"),
                            Address = "0spam.fusionzero.com",
                            CreateTime = 1683372057L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("bcfcb8e3-3d38-4c68-9488-fe010721fbe5"),
                            Address = "url.0spam.org",
                            CreateTime = 1683372057L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 1,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("8314a1e6-1116-45ae-9d74-dbe07542bee1"),
                            Address = "ips.backscatterer.org",
                            CreateTime = 1683372057L,
                            DelistUrl = "http://www.backscatterer.org/?target=test",
                            Level = 2,
                            Name = "backscatterer",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("8b9b6511-f246-4364-8e49-540dbe482066"),
                            Address = "combined.abuse.ch",
                            CreateTime = 1683372057L,
                            DelistUrl = "https://abuse.ch/?p=532",
                            Level = 1,
                            Name = "Abuse.ch",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("63780335-5f45-4464-accc-7861083335e6"),
                            Address = "zen.spamhaus.org",
                            CreateTime = 1683372057L,
                            DelistUrl = "http://www.spamhaus.org/zen/",
                            Level = 2,
                            Name = "Spamhaus",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("5cec4696-40fc-4771-ad37-8a6af8209229"),
                            Address = "spam.spamrats.com",
                            CreateTime = 1683372057L,
                            DelistUrl = "https://www.spamrats.com/lookup.php?ip=ADDRESS",
                            Level = 0,
                            Name = "Spam Rats",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("312e7470-c48e-4292-a2e0-188defa485d9"),
                            Address = "b.barracudacentral.org",
                            CreateTime = 1683372057L,
                            DelistUrl = "http://barracudacentral.org/rbl",
                            Level = 1,
                            Name = "Barracuda",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("12b9e23c-19cb-4460-ad6e-5b3a91883462"),
                            Address = "ix.dnsbl.manitu.net",
                            CreateTime = 1683372057L,
                            DelistUrl = "https://www.nixspam.net/lookup.php?language=en&value=ADDRESS",
                            Level = 1,
                            Name = "Manitu",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("0e69eb2c-49d7-4366-a278-f779453c9ea4"),
                            Address = "spam.dnsbl.sorbs.net",
                            CreateTime = 1683372057L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Spam Sorbs",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("5006fa9c-a6f5-4725-b284-3e1e94c2aab6"),
                            Address = "smtp.dnsbl.sorbs.net",
                            CreateTime = 1683372057L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "SMTP Relay Sorbs",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("42751bd7-2b64-4565-8885-6c8b1a50edbf"),
                            Address = "web.dnsbl.sorbs.net",
                            CreateTime = 1683372057L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Web Sorbs",
                            Type = 1,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("8b8d8937-cd90-43d8-a4b9-5446fd4ff136"),
                            Address = "spam.dnsbl.anonmails.de",
                            CreateTime = 1683372057L,
                            DelistUrl = "https://anonmails.de/dnsbl.php?ip=ADDRESS",
                            Level = 1,
                            Name = "Annonmails.de",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("cd05efb1-6a93-45f2-8225-f2dc97fe786c"),
                            Address = "ubl.lashback.com",
                            CreateTime = 1683372057L,
                            DelistUrl = "https://blacklist.lashback.com/?ipAddress=ADDRESS",
                            Level = 3,
                            Name = "Lashback",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("eff4897e-85ac-4066-b6b1-c0ccca351e6b"),
                            Address = "z.mailspike.net",
                            CreateTime = 1683372057L,
                            DelistUrl = "https://mailspike.org/iplookup.html",
                            Level = 1,
                            Name = "Mailspike",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("6677e49b-3791-49ca-8ece-62d02572debe"),
                            Address = "cbl.abuseat.org",
                            CreateTime = 1683372057L,
                            DelistUrl = "http://www.abuseat.org",
                            Level = 1,
                            Name = "Abuseeat",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("b41b4289-2a7c-47b3-b780-f716f7d9cde6"),
                            Address = "psbl.surriel.com",
                            CreateTime = 1683372057L,
                            DelistUrl = "https://psbl.org/listing?ip=ADDRESS",
                            Level = 1,
                            Name = "PSBL Surriel",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("9766d9cf-b51a-4859-a42f-3262e55ccec4"),
                            Address = "bl.rspamd.com",
                            CreateTime = 1683372057L,
                            DelistUrl = "https://bl.rspamd.com/",
                            Level = 1,
                            Name = "RBL Rspamd",
                            Type = 1,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("bd06622e-89c8-40af-9701-b44a96e3455c"),
                            Address = "dnsbl-1.uceprotect.net",
                            CreateTime = 1683372057L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL1",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("90672959-e76e-4fc2-a715-cf4c11313fa5"),
                            Address = "dnsbl-2.uceprotect.net",
                            CreateTime = 1683372057L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL2",
                            Type = 0,
                            UpdateTime = 1683372057L
                        },
                        new
                        {
                            Id = new Guid("0db32345-5f82-4b64-a06c-c00457f1510b"),
                            Address = "dnsbl-3.uceprotect.net",
                            CreateTime = 1683372057L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL3",
                            Type = 0,
                            UpdateTime = 1683372057L
                        });
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PaswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PaswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.HasOne("rbl_tracker.Models.CheckRblHistory", null)
                        .WithMany()
                        .HasForeignKey("DetectedHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rbl_tracker.Models.Rbl", null)
                        .WithMany()
                        .HasForeignKey("RblsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Domains")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Ips")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Navigation("Domains");

                    b.Navigation("Ips");
                });
#pragma warning restore 612, 618
        }
    }
}
