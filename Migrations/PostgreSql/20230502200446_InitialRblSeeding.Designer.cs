// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using rbl_tracker.Data;

#nullable disable

namespace rbl_tracker.Migrations.PostgreSql
{
    [DbContext(typeof(PostgreDbContext))]
    [Migration("20230502200446_InitialRblSeeding")]
    partial class InitialRblSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("rbl_tracker.Models.Rbl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("DelistUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Rbls");

                    b.HasData(
                        new
                        {
                            Id = new Guid("73661c5c-5ce0-4906-a55b-b40baf17244b"),
                            Address = "bl.spamcop.com",
                            CreateTime = 1683057886L,
                            DelistUrl = "https://www.spamcop.net/bl.shtml",
                            Level = 1,
                            Name = "SpamCop",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("4e505ee8-8e71-446e-8e4f-bf86c1e6aa20"),
                            Address = "0spam.fusionzero.com",
                            CreateTime = 1683057886L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("9aed00c2-bb77-40eb-ab4f-68a44bde02a0"),
                            Address = "url.0spam.org",
                            CreateTime = 1683057886L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 1,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("00872c29-f6dc-44e5-911d-b577224cafcb"),
                            Address = "ips.backscatterer.org",
                            CreateTime = 1683057886L,
                            DelistUrl = "http://www.backscatterer.org/?target=test",
                            Level = 2,
                            Name = "backscatterer",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("e022aa9f-4ef1-44ae-bd79-96df797c491d"),
                            Address = "combined.abuse.ch",
                            CreateTime = 1683057886L,
                            DelistUrl = "https://abuse.ch/?p=532",
                            Level = 1,
                            Name = "Abuse.ch",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("4537a36c-9a2c-4d04-837b-47683e265bee"),
                            Address = "zen.spamhaus.org",
                            CreateTime = 1683057886L,
                            DelistUrl = "http://www.spamhaus.org/zen/",
                            Level = 2,
                            Name = "Spamhaus",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("b2e7a88f-b654-4e56-9f10-4502b26112cf"),
                            Address = "spam.spamrats.com",
                            CreateTime = 1683057886L,
                            DelistUrl = "https://www.spamrats.com/lookup.php?ip=ADDRESS",
                            Level = 0,
                            Name = "Spam Rats",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("43531f76-b08d-4c91-8f2e-835254d8aacf"),
                            Address = "b.barracudacentral.org",
                            CreateTime = 1683057886L,
                            DelistUrl = "http://barracudacentral.org/rbl",
                            Level = 1,
                            Name = "Barracuda",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("16e976bd-3685-4a77-8c7e-65848fe88b96"),
                            Address = "ix.dnsbl.manitu.net",
                            CreateTime = 1683057886L,
                            DelistUrl = "https://www.nixspam.net/lookup.php?language=en&value=ADDRESS",
                            Level = 1,
                            Name = "Manitu",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("35a05f7e-ff72-4a5b-a1be-6266f3dac968"),
                            Address = "spam.dnsbl.sorbs.net",
                            CreateTime = 1683057886L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Spam Sorbs",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("9156cb7e-fad2-443b-80d3-fd56b39783e1"),
                            Address = "smtp.dnsbl.sorbs.net",
                            CreateTime = 1683057886L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "SMTP Relay Sorbs",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("1bee07c1-4823-40a7-aa7c-42a0add5a459"),
                            Address = "web.dnsbl.sorbs.net",
                            CreateTime = 1683057886L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Web Sorbs",
                            Type = 1,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("3b180774-bc85-4b4f-b2c9-3283a92d7552"),
                            Address = "spam.dnsbl.anonmails.de",
                            CreateTime = 1683057886L,
                            DelistUrl = "https://anonmails.de/dnsbl.php?ip=ADDRESS",
                            Level = 1,
                            Name = "Annonmails.de",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("2878c8ec-231e-4222-98fb-551cd2036392"),
                            Address = "ubl.lashback.com",
                            CreateTime = 1683057886L,
                            DelistUrl = "https://blacklist.lashback.com/?ipAddress=ADDRESS",
                            Level = 3,
                            Name = "Lashback",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("b1e9323f-96e8-4551-ab2d-cf428d6146ce"),
                            Address = "z.mailspike.net",
                            CreateTime = 1683057886L,
                            DelistUrl = "https://mailspike.org/iplookup.html",
                            Level = 1,
                            Name = "Mailspike",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("bdcce912-0759-4ef9-a3fe-68f30295e424"),
                            Address = "cbl.abuseat.org",
                            CreateTime = 1683057886L,
                            DelistUrl = "http://www.abuseat.org",
                            Level = 1,
                            Name = "Abuseeat",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("a4061957-f454-41b4-83a2-e0efe0fc6a1e"),
                            Address = "psbl.surriel.com",
                            CreateTime = 1683057886L,
                            DelistUrl = "https://psbl.org/listing?ip=ADDRESS",
                            Level = 1,
                            Name = "PSBL Surriel",
                            Type = 0,
                            UpdateTime = 1683057886L
                        },
                        new
                        {
                            Id = new Guid("ed2ca11e-379b-465c-af77-c27af459e4e8"),
                            Address = "bl.rspamd.com",
                            CreateTime = 1683057886L,
                            DelistUrl = "https://bl.rspamd.com/",
                            Level = 1,
                            Name = "RBL Rspamd",
                            Type = 1,
                            UpdateTime = 1683057886L
                        });
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PaswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PaswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Domains")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Ips")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Navigation("Domains");

                    b.Navigation("Ips");
                });
#pragma warning restore 612, 618
        }
    }
}
