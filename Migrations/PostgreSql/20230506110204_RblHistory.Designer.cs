// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using rbl_tracker.Data;

#nullable disable

namespace rbl_tracker.Migrations.PostgreSql
{
    [DbContext(typeof(PostgreDbContext))]
    [Migration("20230506110204_RblHistory")]
    partial class RblHistory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.Property<Guid>("DetectedHistoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RblsId")
                        .HasColumnType("uuid");

                    b.HasKey("DetectedHistoryId", "RblsId");

                    b.HasIndex("RblsId");

                    b.ToTable("CheckRblHistoryRbl");
                });

            modelBuilder.Entity("rbl_tracker.Models.CheckRblHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("CheckTime")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Domain")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Ip")
                        .HasColumnType("uuid");

                    b.Property<int?>("Level")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CheckRblHistory");
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("rbl_tracker.Models.Rbl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("DelistUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Rbls");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e92e3aa-190f-461b-9dae-9e213a1cc589"),
                            Address = "bl.spamcop.com",
                            CreateTime = 1683370924L,
                            DelistUrl = "https://www.spamcop.net/bl.shtml",
                            Level = 1,
                            Name = "SpamCop",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("36e6472f-70c6-4dbb-87d1-c455a7c72618"),
                            Address = "0spam.fusionzero.com",
                            CreateTime = 1683370924L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("68c00cc7-4f2d-4ab3-bf44-6c47001cb90e"),
                            Address = "url.0spam.org",
                            CreateTime = 1683370924L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 1,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("087041b0-a036-4c99-8511-dcfdcd3de307"),
                            Address = "ips.backscatterer.org",
                            CreateTime = 1683370924L,
                            DelistUrl = "http://www.backscatterer.org/?target=test",
                            Level = 2,
                            Name = "backscatterer",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("e466ba96-f9bb-455f-b43b-be7284df9487"),
                            Address = "combined.abuse.ch",
                            CreateTime = 1683370924L,
                            DelistUrl = "https://abuse.ch/?p=532",
                            Level = 1,
                            Name = "Abuse.ch",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("23efd8bf-a102-448d-930a-ff72c15db2ce"),
                            Address = "zen.spamhaus.org",
                            CreateTime = 1683370924L,
                            DelistUrl = "http://www.spamhaus.org/zen/",
                            Level = 2,
                            Name = "Spamhaus",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("fd266871-a755-4f2e-85ea-6b6793c01470"),
                            Address = "spam.spamrats.com",
                            CreateTime = 1683370924L,
                            DelistUrl = "https://www.spamrats.com/lookup.php?ip=ADDRESS",
                            Level = 0,
                            Name = "Spam Rats",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("8aa9306d-999d-45d4-b6a2-1d967fd4e0eb"),
                            Address = "b.barracudacentral.org",
                            CreateTime = 1683370924L,
                            DelistUrl = "http://barracudacentral.org/rbl",
                            Level = 1,
                            Name = "Barracuda",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("fa77c3f3-473c-43f7-a08d-8f346390acdb"),
                            Address = "ix.dnsbl.manitu.net",
                            CreateTime = 1683370924L,
                            DelistUrl = "https://www.nixspam.net/lookup.php?language=en&value=ADDRESS",
                            Level = 1,
                            Name = "Manitu",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("62797da9-23b7-4312-a3af-5bc227f1083f"),
                            Address = "spam.dnsbl.sorbs.net",
                            CreateTime = 1683370924L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Spam Sorbs",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("b75a1abc-e861-4df5-b415-bfd38afe6a60"),
                            Address = "smtp.dnsbl.sorbs.net",
                            CreateTime = 1683370924L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "SMTP Relay Sorbs",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("5955fd9b-3061-4f30-a664-094b5bbf08f8"),
                            Address = "web.dnsbl.sorbs.net",
                            CreateTime = 1683370924L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Web Sorbs",
                            Type = 1,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("b641f297-69f7-42e1-8a10-9858b1a620fe"),
                            Address = "spam.dnsbl.anonmails.de",
                            CreateTime = 1683370924L,
                            DelistUrl = "https://anonmails.de/dnsbl.php?ip=ADDRESS",
                            Level = 1,
                            Name = "Annonmails.de",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("0025b7f4-f8be-44dc-b8c1-3f270caa6301"),
                            Address = "ubl.lashback.com",
                            CreateTime = 1683370924L,
                            DelistUrl = "https://blacklist.lashback.com/?ipAddress=ADDRESS",
                            Level = 3,
                            Name = "Lashback",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("43acd940-f3d2-468b-a64d-26594a84d9b2"),
                            Address = "z.mailspike.net",
                            CreateTime = 1683370924L,
                            DelistUrl = "https://mailspike.org/iplookup.html",
                            Level = 1,
                            Name = "Mailspike",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("19b52b52-a9f1-4923-91fb-6f27e2a220dd"),
                            Address = "cbl.abuseat.org",
                            CreateTime = 1683370924L,
                            DelistUrl = "http://www.abuseat.org",
                            Level = 1,
                            Name = "Abuseeat",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("cc1ac331-bb09-4aab-96ba-7ff34bb31337"),
                            Address = "psbl.surriel.com",
                            CreateTime = 1683370924L,
                            DelistUrl = "https://psbl.org/listing?ip=ADDRESS",
                            Level = 1,
                            Name = "PSBL Surriel",
                            Type = 0,
                            UpdateTime = 1683370924L
                        },
                        new
                        {
                            Id = new Guid("0f0377ad-639c-46d0-ad58-2f3bb3a570fc"),
                            Address = "bl.rspamd.com",
                            CreateTime = 1683370924L,
                            DelistUrl = "https://bl.rspamd.com/",
                            Level = 1,
                            Name = "RBL Rspamd",
                            Type = 1,
                            UpdateTime = 1683370924L
                        });
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PaswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PaswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.HasOne("rbl_tracker.Models.CheckRblHistory", null)
                        .WithMany()
                        .HasForeignKey("DetectedHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rbl_tracker.Models.Rbl", null)
                        .WithMany()
                        .HasForeignKey("RblsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Domains")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Ips")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Navigation("Domains");

                    b.Navigation("Ips");
                });
#pragma warning restore 612, 618
        }
    }
}
