// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using rbl_tracker.Data;

#nullable disable

namespace rbl_tracker.Migrations.PostgreSql
{
    [DbContext(typeof(PostgreDbContext))]
    [Migration("20230506112003_AddUceprotectRbl")]
    partial class AddUceprotectRbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.Property<Guid>("DetectedHistoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RblsId")
                        .HasColumnType("uuid");

                    b.HasKey("DetectedHistoryId", "RblsId");

                    b.HasIndex("RblsId");

                    b.ToTable("CheckRblHistoryRbl");
                });

            modelBuilder.Entity("rbl_tracker.Models.CheckRblHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("CheckTime")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Domain")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Ip")
                        .HasColumnType("uuid");

                    b.Property<int?>("Level")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CheckRblHistory");
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("rbl_tracker.Models.Rbl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("DelistUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Rbls");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2cc497c-1aac-417f-83a8-0b6820bf1f07"),
                            Address = "bl.spamcop.com",
                            CreateTime = 1683372003L,
                            DelistUrl = "https://www.spamcop.net/bl.shtml",
                            Level = 1,
                            Name = "SpamCop",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("ff8006f0-84c1-4e89-9d81-5b46bc89edca"),
                            Address = "0spam.fusionzero.com",
                            CreateTime = 1683372003L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("c87eba8e-806a-49b0-a633-152be8cce664"),
                            Address = "url.0spam.org",
                            CreateTime = 1683372003L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 1,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("fd0f6dd3-1751-48e3-bca1-205828c1560b"),
                            Address = "ips.backscatterer.org",
                            CreateTime = 1683372003L,
                            DelistUrl = "http://www.backscatterer.org/?target=test",
                            Level = 2,
                            Name = "backscatterer",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("8b7c1f9a-d7db-4735-932c-659866f0ee7c"),
                            Address = "combined.abuse.ch",
                            CreateTime = 1683372003L,
                            DelistUrl = "https://abuse.ch/?p=532",
                            Level = 1,
                            Name = "Abuse.ch",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("d663ffe6-458e-4ece-82c1-9ed409877067"),
                            Address = "zen.spamhaus.org",
                            CreateTime = 1683372003L,
                            DelistUrl = "http://www.spamhaus.org/zen/",
                            Level = 2,
                            Name = "Spamhaus",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("84c10c13-e1fe-401e-977e-faeda00c5258"),
                            Address = "spam.spamrats.com",
                            CreateTime = 1683372003L,
                            DelistUrl = "https://www.spamrats.com/lookup.php?ip=ADDRESS",
                            Level = 0,
                            Name = "Spam Rats",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("e440e4f6-b6bc-48a3-931d-157f9cb9b1b3"),
                            Address = "b.barracudacentral.org",
                            CreateTime = 1683372003L,
                            DelistUrl = "http://barracudacentral.org/rbl",
                            Level = 1,
                            Name = "Barracuda",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("aaf313a2-57be-446c-9256-483d786ff9c9"),
                            Address = "ix.dnsbl.manitu.net",
                            CreateTime = 1683372003L,
                            DelistUrl = "https://www.nixspam.net/lookup.php?language=en&value=ADDRESS",
                            Level = 1,
                            Name = "Manitu",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("e2b24854-fa7d-41a1-9eed-8bedd3631833"),
                            Address = "spam.dnsbl.sorbs.net",
                            CreateTime = 1683372003L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Spam Sorbs",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("ace00027-b40a-4655-8fe7-eb1bd59e1571"),
                            Address = "smtp.dnsbl.sorbs.net",
                            CreateTime = 1683372003L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "SMTP Relay Sorbs",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("1b69991c-a0d3-4a54-a166-84a32685a729"),
                            Address = "web.dnsbl.sorbs.net",
                            CreateTime = 1683372003L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Web Sorbs",
                            Type = 1,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("aa4df5c1-df04-41e8-8aca-92685bbd32c9"),
                            Address = "spam.dnsbl.anonmails.de",
                            CreateTime = 1683372003L,
                            DelistUrl = "https://anonmails.de/dnsbl.php?ip=ADDRESS",
                            Level = 1,
                            Name = "Annonmails.de",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("0d8a0b7f-73de-4262-a977-76e4d7a438c9"),
                            Address = "ubl.lashback.com",
                            CreateTime = 1683372003L,
                            DelistUrl = "https://blacklist.lashback.com/?ipAddress=ADDRESS",
                            Level = 3,
                            Name = "Lashback",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("b9cfe76a-7186-4d03-9f64-ba71a1e87922"),
                            Address = "z.mailspike.net",
                            CreateTime = 1683372003L,
                            DelistUrl = "https://mailspike.org/iplookup.html",
                            Level = 1,
                            Name = "Mailspike",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("e0df668f-5a22-494e-b411-12d3dc7777d9"),
                            Address = "cbl.abuseat.org",
                            CreateTime = 1683372003L,
                            DelistUrl = "http://www.abuseat.org",
                            Level = 1,
                            Name = "Abuseeat",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("77eda4a6-f1f3-4c32-9e4a-d638e810b508"),
                            Address = "psbl.surriel.com",
                            CreateTime = 1683372003L,
                            DelistUrl = "https://psbl.org/listing?ip=ADDRESS",
                            Level = 1,
                            Name = "PSBL Surriel",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("d1bfbf63-3a05-4955-b48c-89d8c96fc18d"),
                            Address = "bl.rspamd.com",
                            CreateTime = 1683372003L,
                            DelistUrl = "https://bl.rspamd.com/",
                            Level = 1,
                            Name = "RBL Rspamd",
                            Type = 1,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("e2051923-9c05-4c3b-bc5c-97350e0ec450"),
                            Address = "dnsbl-1.uceprotect.net",
                            CreateTime = 1683372003L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL1",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("16d7e8d6-404c-463f-9676-d4fc61c3267e"),
                            Address = "dnsbl-2.uceprotect.net",
                            CreateTime = 1683372003L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL2",
                            Type = 0,
                            UpdateTime = 1683372003L
                        },
                        new
                        {
                            Id = new Guid("52baa3fc-e564-4505-9250-87103275029c"),
                            Address = "dnsbl-3.uceprotect.net",
                            CreateTime = 1683372003L,
                            DelistUrl = "http://www.uceprotect.net/en/rblcheck.php?ipr=ADDRESS",
                            Level = 2,
                            Name = "UCEPROTECTL3",
                            Type = 0,
                            UpdateTime = 1683372003L
                        });
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PaswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PaswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.HasOne("rbl_tracker.Models.CheckRblHistory", null)
                        .WithMany()
                        .HasForeignKey("DetectedHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rbl_tracker.Models.Rbl", null)
                        .WithMany()
                        .HasForeignKey("RblsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Domains")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Ips")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Navigation("Domains");

                    b.Navigation("Ips");
                });
#pragma warning restore 612, 618
        }
    }
}
