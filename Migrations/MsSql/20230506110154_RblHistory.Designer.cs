// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rbl_tracker.Data;

#nullable disable

namespace rbl_tracker.Migrations.MsSql
{
    [DbContext(typeof(MsSqlDbContext))]
    [Migration("20230506110154_RblHistory")]
    partial class RblHistory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.Property<Guid>("DetectedHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RblsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DetectedHistoryId", "RblsId");

                    b.HasIndex("RblsId");

                    b.ToTable("CheckRblHistoryRbl");
                });

            modelBuilder.Entity("rbl_tracker.Models.CheckRblHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CheckTime")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Domain")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Ip")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CheckRblHistory");
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("rbl_tracker.Models.Rbl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("DelistUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Rbls");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c352113e-be6b-43d9-b40f-e1dc99b5a395"),
                            Address = "bl.spamcop.com",
                            CreateTime = 1683370914L,
                            DelistUrl = "https://www.spamcop.net/bl.shtml",
                            Level = 1,
                            Name = "SpamCop",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("cb1947de-5ad8-4060-9f7b-77e98b507fe2"),
                            Address = "0spam.fusionzero.com",
                            CreateTime = 1683370914L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("94b40f9f-3b29-475a-aa15-eaf2c490f2c7"),
                            Address = "url.0spam.org",
                            CreateTime = 1683370914L,
                            DelistUrl = "https://check.0spam.org/q/?ipaddr=ADDRESS",
                            Level = 1,
                            Name = "0 Spam",
                            Type = 1,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("b9ddf87e-7890-4942-8573-b52da489454f"),
                            Address = "ips.backscatterer.org",
                            CreateTime = 1683370914L,
                            DelistUrl = "http://www.backscatterer.org/?target=test",
                            Level = 2,
                            Name = "backscatterer",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("93c0e753-ba3f-421d-824f-8e053d345cf5"),
                            Address = "combined.abuse.ch",
                            CreateTime = 1683370914L,
                            DelistUrl = "https://abuse.ch/?p=532",
                            Level = 1,
                            Name = "Abuse.ch",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("b5282858-7a7a-4352-9f1f-61a080a0bee9"),
                            Address = "zen.spamhaus.org",
                            CreateTime = 1683370914L,
                            DelistUrl = "http://www.spamhaus.org/zen/",
                            Level = 2,
                            Name = "Spamhaus",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("359b681e-cea8-4745-b371-781db51793d4"),
                            Address = "spam.spamrats.com",
                            CreateTime = 1683370914L,
                            DelistUrl = "https://www.spamrats.com/lookup.php?ip=ADDRESS",
                            Level = 0,
                            Name = "Spam Rats",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("8c8a2282-bd6f-461f-8789-d72409bb2d54"),
                            Address = "b.barracudacentral.org",
                            CreateTime = 1683370914L,
                            DelistUrl = "http://barracudacentral.org/rbl",
                            Level = 1,
                            Name = "Barracuda",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("c5ac9dbf-3dc4-402b-a05d-841388b39bb4"),
                            Address = "ix.dnsbl.manitu.net",
                            CreateTime = 1683370914L,
                            DelistUrl = "https://www.nixspam.net/lookup.php?language=en&value=ADDRESS",
                            Level = 1,
                            Name = "Manitu",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("e97a9339-2e46-46fa-bb71-d4a095639aba"),
                            Address = "spam.dnsbl.sorbs.net",
                            CreateTime = 1683370914L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Spam Sorbs",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("f8f83421-1e5f-4deb-9898-f49588a19025"),
                            Address = "smtp.dnsbl.sorbs.net",
                            CreateTime = 1683370914L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "SMTP Relay Sorbs",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("533ebb64-91ea-4339-ae1c-170598cd0576"),
                            Address = "web.dnsbl.sorbs.net",
                            CreateTime = 1683370914L,
                            DelistUrl = "http://www.sorbs.net/lookup.shtml",
                            Level = 3,
                            Name = "Web Sorbs",
                            Type = 1,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("bbdd363c-5e5c-4800-8dd9-2bb7cf330a4e"),
                            Address = "spam.dnsbl.anonmails.de",
                            CreateTime = 1683370914L,
                            DelistUrl = "https://anonmails.de/dnsbl.php?ip=ADDRESS",
                            Level = 1,
                            Name = "Annonmails.de",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("457913af-bb49-4edb-aca6-97029171acb3"),
                            Address = "ubl.lashback.com",
                            CreateTime = 1683370914L,
                            DelistUrl = "https://blacklist.lashback.com/?ipAddress=ADDRESS",
                            Level = 3,
                            Name = "Lashback",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("da3d6538-214f-458b-964b-7edf7205b1b3"),
                            Address = "z.mailspike.net",
                            CreateTime = 1683370914L,
                            DelistUrl = "https://mailspike.org/iplookup.html",
                            Level = 1,
                            Name = "Mailspike",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("691a6283-45e8-418a-b343-b3db99099e56"),
                            Address = "cbl.abuseat.org",
                            CreateTime = 1683370914L,
                            DelistUrl = "http://www.abuseat.org",
                            Level = 1,
                            Name = "Abuseeat",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("f77e8059-5df2-4c79-80ed-4d6f45db8f91"),
                            Address = "psbl.surriel.com",
                            CreateTime = 1683370914L,
                            DelistUrl = "https://psbl.org/listing?ip=ADDRESS",
                            Level = 1,
                            Name = "PSBL Surriel",
                            Type = 0,
                            UpdateTime = 1683370914L
                        },
                        new
                        {
                            Id = new Guid("63758d1d-7529-4711-887c-2316573fe0c0"),
                            Address = "bl.rspamd.com",
                            CreateTime = 1683370914L,
                            DelistUrl = "https://bl.rspamd.com/",
                            Level = 1,
                            Name = "RBL Rspamd",
                            Type = 1,
                            UpdateTime = 1683370914L
                        });
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CreateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PaswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PaswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<long>("UpdateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CheckRblHistoryRbl", b =>
                {
                    b.HasOne("rbl_tracker.Models.CheckRblHistory", null)
                        .WithMany()
                        .HasForeignKey("DetectedHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rbl_tracker.Models.Rbl", null)
                        .WithMany()
                        .HasForeignKey("RblsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("rbl_tracker.Models.Domain", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Domains")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.Ip", b =>
                {
                    b.HasOne("rbl_tracker.Models.User", "Owner")
                        .WithMany("Ips")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("rbl_tracker.Models.User", b =>
                {
                    b.Navigation("Domains");

                    b.Navigation("Ips");
                });
#pragma warning restore 612, 618
        }
    }
}
